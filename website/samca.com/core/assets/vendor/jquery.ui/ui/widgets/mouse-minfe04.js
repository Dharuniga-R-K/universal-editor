/*!
 * jQuery UI Mouse 1.14.1
 * https://jqueryui.com
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license.
 * https://jquery.org/license
 */
!(function (e) {
  typeof define === 'function' && define.amd ? define(['jquery', '../version', '../widget'], e) : e(jQuery);
}(((e) => {
  let t = !1; return e(document).on('mouseup', (() => { t = !1; })), e.widget('ui.mouse', {
    version: '1.14.1', options: { cancel: 'input, textarea, button, select, option', distance: 1, delay: 0 }, _mouseInit() { const t = this; this.element.on(`mousedown.${this.widgetName}`, ((e) => t._mouseDown(e))).on(`click.${this.widgetName}`, ((s) => { if (!0 === e.data(s.target, `${t.widgetName}.preventClickEvent`)) return e.removeData(s.target, `${t.widgetName}.preventClickEvent`), s.stopImmediatePropagation(), !1; })), this.started = !1; }, _mouseDestroy() { this.element.off(`.${this.widgetName}`), this._mouseMoveDelegate && this.document.off(`mousemove.${this.widgetName}`, this._mouseMoveDelegate).off(`mouseup.${this.widgetName}`, this._mouseUpDelegate); }, _mouseDown(s) { if (!t) { this._mouseMoved = !1, this._mouseStarted && this._mouseUp(s), this._mouseDownEvent = s; const i = this; const o = s.which === 1; const n = typeof this.options.cancel === 'string' && e(s.target).closest(this.options.cancel).length; return !(o && !n && this._mouseCapture(s)) || (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout((() => { i.mouseDelayMet = !0; }), this.options.delay)), this._mouseDistanceMet(s) && this._mouseDelayMet(s) && (this._mouseStarted = !1 !== this._mouseStart(s), !this._mouseStarted) ? (s.preventDefault(), !0) : (!0 === e.data(s.target, `${this.widgetName}.preventClickEvent`) && e.removeData(s.target, `${this.widgetName}.preventClickEvent`), this._mouseMoveDelegate = function (e) { return i._mouseMove(e); }, this._mouseUpDelegate = function (e) { return i._mouseUp(e); }, this.document.on(`mousemove.${this.widgetName}`, this._mouseMoveDelegate).on(`mouseup.${this.widgetName}`, this._mouseUpDelegate), s.preventDefault(), t = !0, !0)); } }, _mouseMove(e) { if (this._mouseMoved && !e.which) if (e.originalEvent.altKey || e.originalEvent.ctrlKey || e.originalEvent.metaKey || e.originalEvent.shiftKey) this.ignoreMissingWhich = !0; else if (!this.ignoreMissingWhich) return this._mouseUp(e); return (e.which || e.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(e), e.preventDefault()) : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = !1 !== this._mouseStart(this._mouseDownEvent, e), this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)), !this._mouseStarted); }, _mouseUp(s) { this.document.off(`mousemove.${this.widgetName}`, this._mouseMoveDelegate).off(`mouseup.${this.widgetName}`, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, s.target === this._mouseDownEvent.target && e.data(s.target, `${this.widgetName}.preventClickEvent`, !0), this._mouseStop(s)), this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer), this.ignoreMissingWhich = !1, t = !1, s.preventDefault(); }, _mouseDistanceMet(e) { return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance; }, _mouseDelayMet() { return this.mouseDelayMet; }, _mouseStart() {}, _mouseDrag() {}, _mouseStop() {}, _mouseCapture() { return !0; },
  });
})));
// # sourceMappingURL=mouse-min.js.map
