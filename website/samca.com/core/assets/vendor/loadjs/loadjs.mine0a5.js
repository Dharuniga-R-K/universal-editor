loadjs = (function () { const h = function () {}; let o = {}; let c = {}; let f = {}; function u(e, n) { if (e) { const t = f[e]; if (c[e] = n, t) for (;t.length;)t[0](e, n), t.splice(0, 1); } } function l(e, n) { e.call && (e = { success: e }), n.length ? (e.error || h)(n) : (e.success || h)(e); } function p(t, r, i, s) { let o; let e; let u; const n = document; const c = i.async; const f = (i.numRetries || 0) + 1; const l = i.before || h; const a = t.replace(/[\?|#].*$/, ''); const d = t.replace(/^(css|img|module|nomodule)!/, ''); if (s = s || 0, /(^css!|\.css$)/.test(a))(u = n.createElement('link')).rel = 'stylesheet', u.href = d, (o = 'hideFocus' in u) && u.relList && (o = 0, u.rel = 'preload', u.as = 'style'); else if (/(^img!|\.(png|gif|jpg|svg|webp)$)/.test(a))(u = n.createElement('img')).src = d; else if ((u = n.createElement('script')).src = d, u.async = void 0 === c || c, e = 'noModule' in u, /^module!/.test(a)) { if (!e) return r(t, 'l'); u.type = 'module'; } else if (/^nomodule!/.test(a) && e) return r(t, 'l'); !(u.onload = u.onerror = u.onbeforeload = function (e) { let n = e.type[0]; if (o) try { u.sheet.cssText.length || (n = 'e'); } catch (e) { e.code != 18 && (n = 'e'); } if (n == 'e') { if ((s += 1) < f) return p(t, r, i, s); } else if (u.rel == 'preload' && u.as == 'style') return u.rel = 'stylesheet'; r(t, n, e.defaultPrevented); }) !== l(t, u) && n.head.appendChild(u); } function t(e, n, t) { let r; let i; if (n && n.trim && (r = n), i = (r ? t : n) || {}, r) { if (r in o) throw 'LoadJS'; o[r] = !0; } function s(n, t) { !(function (e, r, n) { let t; let i; let s = (e = e.push ? e : [e]).length; const o = s; const u = []; for (t = function (e, n, t) { if (n == 'e' && u.push(e), n == 'b') { if (!t) return; u.push(e); }--s || r(u); }, i = 0; i < o; i++)p(e[i], t, n); }(e, (e) => { l(i, e), n && l({ success: n, error: t }, e), u(r, e); }, i)); } if (i.returnPromise) return new Promise(s); s(); } return t.ready = function (e, n) { return (function (e, t) { e = e.push ? e : [e]; let n; let r; let i; const s = []; let o = e.length; let u = o; for (n = function (e, n) { n.length && s.push(e), --u || t(s); }; o--;)r = e[o], (i = c[r]) ? n(r, i) : (f[r] = f[r] || []).push(n); }(e, (e) => { l(n, e); })), t; }, t.done = function (e) { u(e, []); }, t.reset = function () { o = {}, c = {}, f = {}; }, t.isDefined = function (e) { return e in o; }, t; }());
